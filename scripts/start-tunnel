#!/bin/zsh
# shellcheck disable=all

# (Zsh, because Bash doesn't support coprocesses until v4, which isn't installed
# on macOS by default.)

# start-tunnel
#
# Usage:
#   scripts/start-tunnel [--url <url>]
#
# Starts an ngrok tunnel, and configures the app to use it while it's open. Will
# also help you install ngrok, and prepare a `.env.local` file if you need one.
# Passes all of its arguments to `ngrok http`.

# Ensure ngrok is installed
ensure_ngrok() {
  if ! command -v ngrok >/dev/null; then
    if command -v brew >/dev/null; then
      echo "ngrok is not installed. Install it now with Homebrew?"
      select yn in "Yes" "No"; do
        if [[ $yn == "Yes" ]]; then
          brew install ngrok
          # Try again.
          ensure_ngrok
          return
        fi
        break
      done
    fi

    echo "❌ Please install ngrok (or fix your PATH) and try again."
    echo "🌐 https://ngrok.com/downloads"
    exit 1
  fi
}

# Remove any existing ngrok URL from .env.local
cleanup() {
  sed -i '' '/#ngrok/d' .env.local
}

coproc {
  # Close the coproc fd held by the coproc itself, so it can exit when the
  # script exits.
  # https://www.zsh.org/mla/users/2011/msg00095.html
  coproc :

  # Whenever a tunnel starts, write the URL to .env.local. Being at the end of
  # the file, this will take precedence over any existing value.
  sed -un 's/.* msg="started tunnel" .*url=\([^ ]*\)/\1/p' | {
    while read -r url; do
      # In case we've just reconnected
      cleanup
      # Write the URL to .env.local
      echo "NEXT_PUBLIC_BLUESKY_CLIENT_URI=$url #ngrok" >>.env.local
    done
  }
} >&2

ensure_ngrok

# Ensure we have a .env.local
[[ -f .env.local ]] || cp .env.tpl .env.local

# Clean up anything left over
cleanup
ngrok http http://localhost:3000 --log /dev/fd/3 "$@" 3>&p
cleanup
